<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.edu.infnet</groupId>
	<artifactId>appLogin</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>appLogin</name>
	<description>     Desenvolver a autenticação de usuários em sistemas Java Web     Desenvolver a autorização de usuários em sistemas Java Web     Mapear classes java como entidades     Estabelecer relacionamentos entre as entidades  Você deve construir uma aplicação Java Web dividida em três camadas, modelo, visão e controle, utilizando Spring Web MVC para construí-la, e JSP para a interface com o usuário, para o cadastro e autenticação de um usuário de um sistema web. Este usuário terá, neste momento, os seguintes campos de formulário:      Nome     E-mail     Senha  E o formulário deve possuir um botão Salvar. Quando o botão Salvar for acionado, sua aplicação deve gravar estas informações em banco de dados. Para tal, sua classe Usuario deve ser modelada como uma entidade, usando a API de persistência Java. A seguir, a aplicação deve exibir as informações de nome e e-mail do usuário numa página JSP de mensagem de sucesso no cadastro, bem como um link Login.  Quando a opção de Login for selecionada, a aplicação deve exibir um formulário solicitando e-mail e senha do usuário, com um botão Realizar Login. A ação Realizar Login deve buscar o e-mail informado na base de dados e, caso ele exista, comparar a senha informada com a senha registrada.  Caso os dados estejam corretos, uma mensagem deve ser exibida, informando que o usuário está autenticado no sistema. Do contrário, o formulário de login deve ser reexibido informando que os dados estão incorretos. Utilize como base a aplicação construída no TP2.</description>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>3.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>3.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2 -->
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>3.0.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
