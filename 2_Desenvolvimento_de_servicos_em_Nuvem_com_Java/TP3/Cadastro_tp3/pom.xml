<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.edu.infnet</groupId>
	<artifactId>Cadastro_tp3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Cadastro_tp3</name>
	<description>Vários sites dispõem de uma área reservada a usuários cadastrados, seja para compras, pesquisas especializadas ou acesso a serviços.  Neste TP3, com base nas ferramentas aprendidas até aqui, você deverá criar um módulo de cadastramento de usuários com os campos: nome, email, telefone, CEP e endereço (o campo email é chave de busca). Esses dados precisam ser gravados em um banco de dados AWS RDS configurado por você.  O campo CEP será usado para buscar o endereço completo através do serviço https://viacep.com.br/ (crie a sua tela da forma mais intuitiva possível). O usuário vai digitar o CEP e o sistema vai preencher os campos do endereço, exceto o número e o complemento.  No processo de cadastramento será necessário subir a foto do usuário. Essa foto será armazenada em um bucket do AWS S3 configurado por você.  Será preciso implementar inclusão, consulta e alteração de dados.  Observação: Por favor leia bem todos os itens de rubrica antes de enviar seu trabalho, pois eles norteiam o que deve constar na sua resposta para que ela seja a mais completa e correta o possível.</description>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
